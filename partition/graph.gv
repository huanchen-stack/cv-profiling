digraph G {

	transform [label="transform\ntime: 0.0003419\ncpu: 0.000516 Mb\ncuda: 30.46 Mb"]
	conv1 [label="conv1\ntime: 0.0001016\ncpu: 0.000372 Mb\ncuda: 160.9 Mb"]
	bn1 [label="bn1\ntime: 0.0001836\ncpu: 0.000372 Mb\ncuda: 80.0 Mb"]
	relu [label="relu\ntime: 3.004e-05\ncpu: 0.000372 Mb\ncuda: 0.0 Mb"]
	maxpool [label="maxpool\ntime: 4.029e-05\ncpu: 0.000372 Mb\ncuda: 39.07 Mb"]
	layer1 [label="layer1\ntime: 0.002618\ncpu: 0.000372 Mb\ncuda: 1314.0 Mb"]
	layer2 [label="layer2\ntime: 0.003867\ncpu: 0.000372 Mb\ncuda: 936.8 Mb"]
	layer3 [label="layer3\ntime: 0.005521\ncpu: 0.000372 Mb\ncuda: 679.4 Mb"]
	layer4 [label="layer4\ntime: 0.002887\ncpu: 0.000372 Mb\ncuda: 237.6 Mb"]
	inner_3 [label="inner_3\ntime: 0.0001097\ncpu: 0.000372 Mb\ncuda: 2.504 Mb"]
	layer_3 [label="layer_3\ntime: 0.0001137\ncpu: 0.000372 Mb\ncuda: 8.75 Mb"]
	inner_2 [label="inner_2\ntime: 0.0001018\ncpu: 0.000372 Mb\ncuda: 9.775 Mb"]
	interpolate__2 [label="interpolate__2\ntime: 4.005e-05\ncpu: 0.000372 Mb\ncuda: 2.44 Mb"]
	layer_2 [label="layer_2\ntime: 0.0001066\ncpu: 0.000372 Mb\ncuda: 16.01 Mb"]
	inner_1 [label="inner_1\ntime: 0.0005872\ncpu: 0.000372 Mb\ncuda: 40.98 Mb"]
	interpolate__1 [label="interpolate__1\ntime: 3.672e-05\ncpu: 0.000372 Mb\ncuda: 9.77 Mb"]
	layer_1 [label="layer_1\ntime: 0.0001132\ncpu: 0.000372 Mb\ncuda: 45.33 Mb"]
	inner_0 [label="inner_0\ntime: 0.0001061\ncpu: 0.000372 Mb\ncuda: 160.2 Mb"]
	interpolate__0 [label="interpolate__0\ntime: 3.719e-05\ncpu: 0.000372 Mb\ncuda: 40.0 Mb"]
	layer_0 [label="layer_0\ntime: 0.0001125\ncpu: 0.000372 Mb\ncuda: 166.3 Mb"]
	extra [label="extra\ntime: 4.268e-05\ncpu: 0.000372 Mb\ncuda: 1.014 Mb"]
	rpn_parallel_f0 [label="rpn_parallel_f0\ntime: 0.005937\ncpu: 0.000792 Mb\ncuda: 381.5 Mb"]
	rpn_parallel_f1 [label="rpn_parallel_f1\ntime: 0.002979\ncpu: 0.000792 Mb\ncuda: 100.0 Mb"]
	rpn_parallel_f2 [label="rpn_parallel_f2\ntime: 0.002412\ncpu: 0.000792 Mb\ncuda: 29.39 Mb"]
	rpn_parallel_f3 [label="rpn_parallel_f3\ntime: 0.002383\ncpu: 0.000792 Mb\ncuda: 12.3 Mb"]
	rpn_parallel_f4 [label="rpn_parallel_f4\ntime: 0.002359\ncpu: 0.000792 Mb\ncuda: 7.946 Mb"]
	rpn_merger [label="rpn_merger\ntime: 0.01919\ncpu: 7.356 Mb\ncuda: 4.149 Mb"]
	box_roi_pool [label="box_roi_pool\ntime: 0.004247\ncpu: 0.000376 Mb\ncuda: 242.7 Mb"]
	fc6 [label="fc6\ntime: 0.000118\ncpu: 0.000372 Mb\ncuda: 25.39 Mb"]
	fc7 [label="fc7\ntime: 0.0001225\ncpu: 0.000372 Mb\ncuda: 25.39 Mb"]
	cls_score [label="cls_score\ntime: 7.486e-05\ncpu: 0.000372 Mb\ncuda: 0.711 Mb"]
	bbox_pred_roi_ [label="bbox_pred_roi_\ntime: 9.036e-05\ncpu: 0.000372 Mb\ncuda: 2.78 Mb"]
	postprocess_detections [label="postprocess_detections\ntime: 0.002528\ncpu: 0.000528 Mb\ncuda: 29.98 Mb"]

	_images_ -> transform [label="torch.Size([1x3x224x224])\n0.6021 Mb"]
	transform -> conv1 [label="torch.Size([1x3x800x800])\n7.68 Mb"]
	conv1 -> bn1 [label="torch.Size([1x64x400x400])\n40.96 Mb"]
	bn1 -> relu [label="torch.Size([1x64x400x400])\n40.96 Mb"]
	relu -> maxpool [label="torch.Size([1x64x400x400])\n40.96 Mb"]
	maxpool -> layer1 [label="torch.Size([1x64x200x200])\n10.24 Mb"]
	layer1 -> layer2 [label="torch.Size([1x256x200x200])\n40.96 Mb"]
	layer2 -> layer3 [label="torch.Size([1x512x100x100])\n20.48 Mb"]
	layer3 -> layer4 [label="torch.Size([1x1024x50x50])\n10.24 Mb"]
	layer4 -> inner_3 [label="torch.Size([1x2048x25x25])\n5.12 Mb"]
	inner_3 -> layer_3 [label="torch.Size([1x256x25x25])\n0.64 Mb"]
	layer3 -> inner_2 [label="torch.Size([1x1024x50x50])\n10.24 Mb"]
	inner_3 -> interpolate__2 [label="torch.Size([1x256x25x25])\n0.64 Mb"]
	inner_2 -> add__2 [label="torch.Size([1x256x50x50])\n2.56 Mb"]
	interpolate__2 -> add__2 [label="torch.Size([1x256x50x50])\n2.56 Mb"]
	add__2 -> layer_2 [label="torch.Size([1x256x50x50])\n2.56 Mb"]
	layer2 -> inner_1 [label="torch.Size([1x512x100x100])\n20.48 Mb"]
	add__2 -> interpolate__1 [label="torch.Size([1x256x50x50])\n2.56 Mb)"]
	inner_1 -> add__1 [label="torch.Size([1x256x100x100])\n10.24 Mb"]
	interpolate__1 -> add__1 [label="torch.Size([1x256x100x100])\n10.24 Mb"]
	add__1 -> layer_1 [label="torch.Size([1x256x100x100])\n10.24 Mb"]
	layer1 -> inner_0 [label="torch.Size([1x256x200x200])\n40.96 Mb"]
	add__1 -> interpolate__0 [label="torch.Size([1x256x100x100])\n10.24 Mb)"]
	inner_0 -> add__0 [label="torch.Size([1x256x200x200])\n40.96 Mb"]
	interpolate__0 -> add__0 [label="torch.Size([1x256x200x200])\n40.96 Mb"]
	add__0 -> layer_0 [label="torch.Size([1x256x200x200])\n40.96 Mb"]
	layer_3 -> extra [label="torch.Size([1x256x25x25])\n0.64 Mb"]
	layer_0 -> rpn_parallel_f0 [label="torch.Size([1x256x200x200])\n40.96 Mb"]
	rpn_parallel_f0 -> rpn_merger [label="3 Tensors\n0.028 Mb"]
	layer_1 -> rpn_parallel_f1 [label="torch.Size([1x256x100x100])\n10.24 Mb"]
	rpn_parallel_f1 -> rpn_merger [label="3 Tensors\n0.028 Mb"]
	layer_2 -> rpn_parallel_f2 [label="torch.Size([1x256x50x50])\n2.56 Mb"]
	rpn_parallel_f2 -> rpn_merger [label="3 Tensors\n0.028 Mb"]
	layer_3 -> rpn_parallel_f3 [label="torch.Size([1x256x25x25])\n0.64 Mb"]
	rpn_parallel_f3 -> rpn_merger [label="3 Tensors\n0.028 Mb"]
	extra -> rpn_parallel_f4 [label="torch.Size([1x256x13x13])\n0.1731 Mb"]
	rpn_parallel_f4 -> rpn_merger [label="3 Tensors\n0.0142 Mb"]
	layer_0 -> box_roi_pool [label="torch.Size([1x256x200x200])\n40.96 Mb"]
	layer_1 -> box_roi_pool [label="torch.Size([1x256x100x100])\n10.24 Mb"]
	layer_2 -> box_roi_pool [label="torch.Size([1x256x50x50])\n2.56 Mb"]
	layer_3 -> box_roi_pool [label="torch.Size([1x256x25x25])\n0.64 Mb"]
	extra -> box_roi_pool [label="torch.Size([1x256x13x13])\n0.1731 Mb"]
	rpn_merger -> box_roi_pool [label="List of Tensors\n0.016 Mb"]
	box_roi_pool -> fc6 [label="torch.Size([1000x12544])\n50.18 Mb"]
	fc6 -> fc7 [label="torch.Size([1000x1024])\n4.096 Mb"]
	fc7 -> cls_score [label="torch.Size([1000x1024])\n4.096 Mb"]
	fc7 -> bbox_pred_roi_ [label="torch.Size([1000x1024])\n4.096 Mb"]
	cls_score -> postprocess_detections [label="torch.Size([1000x91])\n0.364 Mb"]
	bbox_pred_roi_ -> postprocess_detections [label="torch.Size([1000x364])\n1.456 Mb"]
	rpn_merger -> postprocess_detections [label="List of Tensors\n0.016 Mb"]
	postprocess_detections -> postprocess_resize [label="final_output\ndepends on #boxes"]
}