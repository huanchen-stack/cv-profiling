_images_, transform, torch.Size([1x3x224x224]), 0.602112 Mb
transform, conv1, torch.Size([1x3x800x800]), 7.68 Mb
conv1, bn1, torch.Size([1x64x400x400]), 40.96 Mb
bn1, relu, torch.Size([1x64x400x400]), 40.96 Mb
relu, maxpool, torch.Size([1x64x400x400]), 40.96 Mb
maxpool, layer1, torch.Size([1x64x200x200]), 10.24 Mb
layer1, layer2, torch.Size([1x256x200x200]), 40.96 Mb
layer2, layer3, torch.Size([1x512x100x100]), 20.48 Mb
layer3, layer4, torch.Size([1x1024x50x50]), 10.24 Mb
layer4, inner_3, torch.Size([1x2048x25x25]), 5.12 Mb
inner_3, layer_3, torch.Size([1x256x25x25]), 0.64 Mb
layer3, inner_2, torch.Size([1x1024x50x50]), 10.24 Mb
inner_3, interpolate__2, torch.Size([1x256x25x25]), 0.64 Mb
inner_2, add__2, torch.Size([1x256x50x50]), 2.56 Mb
interpolate__2, add__2, torch.Size([1x256x50x50]), 2.56 Mb
add__2, layer_2, torch.Size([1x256x50x50]), 2.56 Mb
layer2, inner_1, torch.Size([1x512x100x100]), 20.48 Mb
add__2, interpolate__1, torch.Size([1x256x50x50]), 2.56 Mb)
inner_1, add__1, torch.Size([1x256x100x100]), 10.24 Mb
interpolate__1, add__1, torch.Size([1x256x100x100]), 10.24 Mb
add__1, layer_1, torch.Size([1x256x100x100]), 10.24 Mb
layer1, inner_0, torch.Size([1x256x200x200]), 40.96 Mb
add__1, interpolate__0, torch.Size([1x256x100x100]), 10.24 Mb)
inner_0, add__0, torch.Size([1x256x200x200]), 40.96 Mb
interpolate__0, add__0, torch.Size([1x256x200x200]), 40.96 Mb
add__0, layer_0, torch.Size([1x256x200x200]), 40.96 Mb
layer_3, extra, torch.Size([1x256x25x25]), 0.64 Mb
layer_0, conv_f0, torch.Size([1x256x200x200]), 40.96 Mb
conv_f0, cls_logits_f0, torch.Size([1x256x200x200]), 40.96 Mb
conv_f0, bbox_pred_f0, torch.Size([1x256x200x200]), 40.96 Mb
layer_1, conv_f1, torch.Size([1x256x100x100]), 10.24 Mb
conv_f1, cls_logits_f1, torch.Size([1x256x100x100]), 10.24 Mb
conv_f1, bbox_pred_f1, torch.Size([1x256x100x100]), 10.24 Mb
layer_2, conv_f2, torch.Size([1x256x50x50]), 2.56 Mb
conv_f2, cls_logits_f2, torch.Size([1x256x50x50]), 2.56 Mb
conv_f2, bbox_pred_f2, torch.Size([1x256x50x50]), 2.56 Mb
layer_3, conv_f3, torch.Size([1x256x25x25]), 0.64 Mb
conv_f3, cls_logits_f3, torch.Size([1x256x25x25]), 0.64 Mb
conv_f3, bbox_pred_f3, torch.Size([1x256x25x25]), 0.64 Mb
extra, conv_f4, torch.Size([1x256x13x13]), 0.173056 Mb
conv_f4, cls_logits_f4, torch.Size([1x256x13x13]), 0.173056 Mb
conv_f4, bbox_pred_f4, torch.Size([1x256x13x13]), 0.173056 Mb
layer_0, anchor_generator, torch.Size([1x256x200x200]), 40.96 Mb
layer_1, anchor_generator, torch.Size([1x256x100x100]), 10.24 Mb
layer_2, anchor_generator, torch.Size([1x256x50x50]), 2.56 Mb
layer_3, anchor_generator, torch.Size([1x256x25x25]), 0.64 Mb
extra, anchor_generator, torch.Size([1x256x13x13]), 0.173056 Mb
anchor_generator, anchor_postprocessing, List of Tensors, 2.558112 Mb
cls_logits_f0, anchor_postprocessing, torch.Size([1x3x200x200]), 0.48 Mb
cls_logits_f1, anchor_postprocessing, torch.Size([1x3x100x100]), 0.12 Mb
cls_logits_f2, anchor_postprocessing, torch.Size([1x3x50x50]), 0.03 Mb
cls_logits_f3, anchor_postprocessing, torch.Size([1x3x25x25]), 0.0075 Mb
cls_logits_f4, anchor_postprocessing, torch.Size([1x3x13x13]), 0.002028 Mb
bbox_pred_f0, anchor_postprocessing, torch.Size([1x12x200x200]), 1.92 Mb
bbox_pred_f1, anchor_postprocessing, torch.Size([1x12x100x100]), 0.48 Mb
bbox_pred_f2, anchor_postprocessing, torch.Size([1x12x50x50]), 0.12 Mb
bbox_pred_f3, anchor_postprocessing, torch.Size([1x12x25x25]), 0.03 Mb
bbox_pred_f4, anchor_postprocessing, torch.Size([1x12x13x13]), 0.008112 Mb
layer_0, box_roi_pool, torch.Size([1x256x200x200]), 40.96 Mb
layer_1, box_roi_pool, torch.Size([1x256x100x100]), 10.24 Mb
layer_2, box_roi_pool, torch.Size([1x256x50x50]), 2.56 Mb
layer_3, box_roi_pool, torch.Size([1x256x25x25]), 0.64 Mb
extra, box_roi_pool, torch.Size([1x256x13x13]), 0.173056 Mb
anchor_postprocessing, box_roi_pool, List of Tensors, 0.016 Mb
box_roi_pool, fc6, torch.Size([1000x12544]), 50.176 Mb
fc6, fc7, torch.Size([1000x1024]), 4.096 Mb
fc7, cls_score, torch.Size([1000x1024]), 4.096 Mb
fc7, bbox_pred_roi_, torch.Size([1000x1024]), 4.096 Mb
cls_score, postprocess_detections, torch.Size([1000x91]), 0.364 Mb
bbox_pred_roi_, postprocess_detections, torch.Size([1000x364]), 1.456 Mb
anchor_postprocessing, postprocess_detections, List of Tensors, 0.016 Mb
postprocess_detections, postprocess_resize, final_output, depends on #boxes